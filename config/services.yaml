# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    gotenbergUrl: '%env(resolve:GOTENBERG_URL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            # pass this value to any $projectDir argument for any service
            # that's created in this file (including controller arguments)
            string $projectDir: '%kernel.project_dir%'
            $bucket: '%env(resolve:S3_BUCKET)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    Domain\:
        resource: '../Domain/'

    Infrastructure\:
        resource: '../Infrastructure/'


    Aws\S3\S3Client:
        arguments:
            - version: 'latest'
              region: '%env(resolve:S3_REGION)%'
              endpoint: '%env(resolve:S3_URL)%'
              use_path_style_endpoint: true
              credentials:
                  key: '%env(resolve:S3_KEY)%'
                  secret: '%env(resolve:S3_SECRET)%'

    Domain\PdfContext\RealPdfProvider:
        arguments:
            $gotenbergUrl: '%gotenbergUrl%'

    Aws\S3\S3ClientInterface:
        alias: Aws\S3\S3Client

    Infrastructure\Service\Security\TwoFactorSecurityConfig:
        arguments:
            $twoFactorProviderRegistry: '@scheb_two_factor.provider_registry'

    ## Meilisearch Client
    Meilisearch\Client:
        factory: [ 'Infrastructure\Factories\MeilisearchFactory' , 'createMeilisearchClient' ]
        arguments:
            $url: '%env(MEILI_URL)%'
            $masterKey: '%env(MEILI_MASTER_KEY)%'
            $stopWords: '%env(MEILI_STOPWORDS)%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

